Git internal:

A Commit.
Tracks files:
1. Paths 
2. Peermission
3. Contents

specifically not to directories.
Head -> commit(ab124) -> commit2(ab301){both commit state the difference between file}
Changing multiple time we get the commit history.
chain of the commit to diff that happen.
git automatically start branching when you go back to any previous commit and start changing the file.
git does it internally.
eg.

commit(ab123) <- commit(asd234)
this will creat new fork repo to the older version.

### Git Internal

How internally git works -> Hashing -> Graph/Tree data structure.

Git is like a key value store:
key -- hash of the data 
value --data 

git uses a cryptographis hash function -> SHA-1
for given gives output 40 digit hexadecimal no.
the hash value is always same for data.
git compress the data in a blob and stores some meta data about data.

